D G "__PCH__" 0 0 ""4.114""
D G "__DEVICE__" 0 0 ""
D G "__DATE__" 0 0 ""31-Aug-18""
D G "__TIME__" 0 0 ""14:32:20"" "The header file for the microcontroller. Change this if your microcontroller is different"
d G "PIN_A0" 1 27 "31744"
d G "PIN_A1" 1 28 "31745"
d G "PIN_A2" 1 29 "31746"
d G "PIN_A3" 1 30 "31747"
d G "PIN_A4" 1 31 "31748"
d G "PIN_A5" 1 32 "31749"
d G "PIN_A6" 1 33 "31750"
d G "PIN_B0" 1 35 "31752"
d G "PIN_B1" 1 36 "31753"
d G "PIN_B2" 1 37 "31754"
d G "PIN_B3" 1 38 "31755"
d G "PIN_B4" 1 39 "31756"
d G "PIN_B5" 1 40 "31757"
d G "PIN_B6" 1 41 "31758"
d G "PIN_B7" 1 42 "31759"
d G "PIN_C0" 1 44 "31760"
d G "PIN_C1" 1 45 "31761"
d G "PIN_C2" 1 46 "31762"
d G "PIN_C4" 1 47 "31764"
d G "PIN_C5" 1 48 "31765"
d G "PIN_C6" 1 49 "31766"
d G "PIN_C7" 1 50 "31767"
d G "PIN_E3" 1 52 "31779"
d G "FALSE" 1 55 "0"
d G "TRUE" 1 56 "1"
d G "BYTE" 1 58 "int8"
d G "BOOLEAN" 1 59 "int1"
d G "getc" 1 61 "getch"
d G "fgetc" 1 62 "getch"
d G "getchar" 1 63 "getch"
d G "putc" 1 64 "putchar"
d G "fputc" 1 65 "putchar"
d G "fgets" 1 66 "gets"
d G "fputs" 1 67 "puts"
d G "WDT_TIMEOUT" 1 73 "7"
d G "MCLR_FROM_SLEEP" 1 74 "11"
d G "MCLR_FROM_RUN" 1 75 "15"
d G "NORMAL_POWER_UP" 1 76 "12"
d G "BROWNOUT_RESTART" 1 77 "14"
d G "WDT_FROM_SLEEP" 1 78 "3"
d G "RESET_INSTRUCTION" 1 79 "0"
d G "SLEEP_FULL" 1 83 "0" "Default"
d G "SLEEP_IDLE" 1 84 "1" "Clock and peripherals don't stop"
d G "T0_INTERNAL" 1 92 "0"
d G "T0_EXT_L_TO_H" 1 93 "32"
d G "T0_EXT_H_TO_L" 1 94 "48"
d G "T0_DIV_1" 1 96 "8"
d G "T0_DIV_2" 1 97 "0"
d G "T0_DIV_4" 1 98 "1"
d G "T0_DIV_8" 1 99 "2"
d G "T0_DIV_16" 1 100 "3"
d G "T0_DIV_32" 1 101 "4"
d G "T0_DIV_64" 1 102 "5"
d G "T0_DIV_128" 1 103 "6"
d G "T0_DIV_256" 1 104 "7"
d G "T0_OFF" 1 106 "0x80"
d G "T0_8_BIT" 1 108 "0x40"
d G "RTCC_INTERNAL" 1 110 "0" "The following are provided for compatibility"
d G "RTCC_EXT_L_TO_H" 1 111 "32" "with older compiler versions"
d G "RTCC_EXT_H_TO_L" 1 112 "48"
d G "RTCC_DIV_1" 1 113 "8"
d G "RTCC_DIV_2" 1 114 "0"
d G "RTCC_DIV_4" 1 115 "1"
d G "RTCC_DIV_8" 1 116 "2"
d G "RTCC_DIV_16" 1 117 "3"
d G "RTCC_DIV_32" 1 118 "4"
d G "RTCC_DIV_64" 1 119 "5"
d G "RTCC_DIV_128" 1 120 "6"
d G "RTCC_DIV_256" 1 121 "7"
d G "RTCC_OFF" 1 122 "0x80"
d G "RTCC_8_BIT" 1 123 "0x40"
d G "WDT_ON" 1 134 "0x100"
d G "WDT_OFF" 1 135 "0"
d G "T1_DISABLED" 1 141 "0"
d G "T1_INTERNAL" 1 142 "0x85"
d G "T1_EXTERNAL" 1 143 "0x87"
d G "T1_EXTERNAL_SYNC" 1 144 "0x83"
d G "T1_CLK_OUT" 1 146 "8"
d G "T1_DIV_BY_1" 1 148 "0"
d G "T1_DIV_BY_2" 1 149 "0x10"
d G "T1_DIV_BY_4" 1 150 "0x20"
d G "T1_DIV_BY_8" 1 151 "0x30"
d G "T2_DISABLED" 1 156 "0"
d G "T2_DIV_BY_1" 1 157 "4"
d G "T2_DIV_BY_4" 1 158 "5"
d G "T2_DIV_BY_16" 1 159 "6"
d G "T3_DISABLED" 1 165 "0"
d G "T3_INTERNAL" 1 166 "0x85"
d G "T3_EXTERNAL" 1 167 "0x87"
d G "T3_EXTERNAL_SYNC" 1 168 "0x83"
d G "T3_DIV_BY_1" 1 170 "0"
d G "T3_DIV_BY_2" 1 171 "0x10"
d G "T3_DIV_BY_4" 1 172 "0x20"
d G "T3_DIV_BY_8" 1 173 "0x30"
d G "CCP_OFF" 1 179 "0"
d G "CCP_CAPTURE_FE" 1 180 "4"
d G "CCP_CAPTURE_RE" 1 181 "5"
d G "CCP_CAPTURE_DIV_4" 1 182 "6"
d G "CCP_CAPTURE_DIV_16" 1 183 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 1 184 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 1 185 "9"
d G "CCP_COMPARE_INT" 1 186 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 1 187 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 1 188 "0xB"
d G "CCP_PWM" 1 189 "0xC"
d G "CCP_PWM_PLUS_1" 1 190 "0x1c"
d G "CCP_PWM_PLUS_2" 1 191 "0x2c"
d G "CCP_PWM_PLUS_3" 1 192 "0x3c"
d G "T3_CCP1_TO_2" 1 198 "0x48"
d G "T3_CCP2" 1 199 "0x8"
d G "SPI_MASTER" 1 207 "0x20"
d G "SPI_SLAVE" 1 208 "0x24"
d G "SPI_SCK_IDLE_HIGH" 1 209 "0x10"
d G "SPI_SCK_IDLE_LOW" 1 210 "0x00"
d G "SPI_CLK_DIV_4" 1 211 "0x00"
d G "SPI_CLK_DIV_16" 1 212 "0x01"
d G "SPI_CLK_DIV_64" 1 213 "0x02"
d G "SPI_CLK_T2" 1 214 "0x03"
d G "SPI_SS_DISABLED" 1 215 "0x01"
d G "SPI_XMIT_L_TO_H" 1 217 "0x4000"
d G "SPI_XMIT_H_TO_L" 1 218 "0x0000"
d G "SPI_SAMPLE_AT_MIDDLE" 1 220 "0x0000"
d G "SPI_SAMPLE_AT_END" 1 221 "0x8000"
d G "SPI_L_TO_H" 1 224 "SPI_SCK_IDLE_LOW"
d G "SPI_H_TO_L" 1 225 "SPI_SCK_IDLE_HIGH"
d G "UART_ADDRESS" 1 231 "2"
d G "UART_DATA" 1 232 "4"
d G "UART_AUTODETECT" 1 233 "8"
d G "UART_AUTODETECT_NOWAIT" 1 234 "9"
d G "UART_WAKEUP_ON_RDA" 1 235 "10"
d G "UART_SEND_BREAK" 1 236 "13"
d G "A0_A3_A1_A3" 1 240 "0xfff04"
d G "A0_A3_A1_A2_OUT_ON_A4_A5" 1 241 "0xfcf03"
d G "A0_A3_A1_A3_OUT_ON_A4_A5" 1 242 "0xbcf05"
d G "NC_NC_NC_NC" 1 243 "0x0ff07"
d G "A0_A3_A1_A2" 1 244 "0xfff02"
d G "A0_A3_NC_NC_OUT_ON_A4" 1 245 "0x9ef01"
d G "A0_VR_A1_VR" 1 246 "0x3ff06"
d G "A3_VR_A2_VR" 1 247 "0xcff0e"
d G "CP1_INVERT" 1 248 "0x0000010"
d G "CP2_INVERT" 1 249 "0x0000020"
d G "VREF_LOW" 1 257 "0xa0"
d G "VREF_HIGH" 1 258 "0x80"
d G "VREF_F5" 1 260 "0x40"
d G "VREF_COMP" 1 261 "0x10"
d G "LVD_LVDIN" 1 266 "0x1F"
d G "LVD_45" 1 267 "0x1E"
d G "LVD_42" 1 268 "0x1D"
d G "LVD_40" 1 269 "0x1C"
d G "LVD_38" 1 270 "0x1B"
d G "LVD_36" 1 271 "0x1A"
d G "LVD_35" 1 272 "0x19"
d G "LVD_33" 1 273 "0x18"
d G "LVD_30" 1 274 "0x17"
d G "LVD_28" 1 275 "0x16"
d G "LVD_27" 1 276 "0x15"
d G "LVD_25" 1 277 "0x14"
d G "LVD_24" 1 278 "0x13"
d G "LVD_23" 1 279 "0x12"
d G "LVD_22" 1 280 "0x11"
d G "LVD_21" 1 281 "0x10"
d G "LVD_TRIGGER_BELOW" 1 283 "0"
d G "LVD_TRIGGER_ABOVE" 1 284 "0x80"
d G "OSC_31KHZ" 1 290 "0"
d G "OSC_125KHZ" 1 291 "0x10"
d G "OSC_250KHZ" 1 292 "0x20"
d G "OSC_500KHZ" 1 293 "0x30"
d G "OSC_1MHZ" 1 294 "0x40"
d G "OSC_2MHZ" 1 295 "0x50"
d G "OSC_4MHZ" 1 296 "0x60"
d G "OSC_8MHZ" 1 297 "0x70"
d G "OSC_16MHZ" 1 298 "0x4060"
d G "OSC_32MHZ" 1 299 "0x4070"
d G "OSC_TIMER1" 1 301 "1"
d G "OSC_INTRC" 1 302 "2"
d G "OSC_NORMAL" 1 303 "0"
d G "OSC_IDLE_MODE" 1 305 "0x80"
d G "OSC_31250" 1 306 "0x8000"
d G "OSC_PLL_ON" 1 307 "0x4000"
d G "OSC_PLL_OFF" 1 308 "0"
d G "OSC_STATE_STABLE" 1 312 "4"
d G "OSC_STATE_EXT_RUNNING" 1 313 "8"
d G "ADC_OFF" 1 320 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 1 321 "0x100"
d G "ADC_CLOCK_DIV_4" 1 322 "0x04"
d G "ADC_CLOCK_DIV_8" 1 323 "0x01"
d G "ADC_CLOCK_DIV_16" 1 324 "0x05"
d G "ADC_CLOCK_DIV_32" 1 325 "0x02"
d G "ADC_CLOCK_DIV_64" 1 326 "0x06"
d G "ADC_CLOCK_INTERNAL" 1 327 "0x07" "Internal 2-6us"
d G "NO_ANALOGS" 1 331 "0x0F" "None"
d G "ALL_ANALOG" 1 332 "0x00" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1 B4 B0"
d G "AN0_TO_AN11" 1 333 "0x03" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1 B4"
d G "AN0_TO_AN10" 1 334 "0x04" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1"
d G "AN0_TO_AN9" 1 335 "0x05" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3"
d G "AN0_TO_AN8" 1 336 "0x06" "A0 A1 A2 A3 A5 E0 E1 E2 B2"
d G "AN0_TO_AN7" 1 337 "0x07" "A0 A1 A2 A3 A5 E0 E1 E2"
d G "AN0_TO_AN6" 1 338 "0x08" "A0 A1 A2 A3 A5 E0 E1"
d G "AN0_TO_AN5" 1 339 "0x09" "A0 A1 A2 A3 A5 E0"
d G "AN0_TO_AN4" 1 340 "0x0A" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN3" 1 341 "0x0B" "A0 A1 A2 A3"
d G "AN0_TO_AN2" 1 342 "0x0C" "A0 A1 A2"
d G "AN0_TO_AN1" 1 343 "0x0D" "A0 A1"
d G "AN0" 1 344 "0x0E" "A0"
d G "AN0_TO_AN11_ANALOG" 1 345 "0x03" "!old only provided for compatibility"
d G "AN0_TO_AN10_ANALOG" 1 346 "0x04" "!old only provided for compatibility"
d G "AN0_TO_AN9_ANALOG" 1 347 "0x05" "!old only provided for compatibility"
d G "AN0_TO_AN8_ANALOG" 1 348 "0x06" "!old only provided for compatibility"
d G "AN0_TO_AN7_ANALOG" 1 349 "0x07" "!old only provided for compatibility"
d G "AN0_TO_AN6_ANALOG" 1 350 "0x08" "!old only provided for compatibility"
d G "AN0_TO_AN5_ANALOG" 1 351 "0x09" "!old only provided for compatibility"
d G "AN0_TO_AN4_ANALOG" 1 352 "0x0A" "!old only provided for compatibility"
d G "AN0_TO_AN3_ANALOG" 1 353 "0x0B" "!old only provided for compatibility"
d G "AN0_TO_AN2_ANALOG" 1 354 "0x0C" "!old only provided for compatibility"
d G "AN0_TO_AN1_ANALOG" 1 355 "0x0D" "!old only provided for compatibility"
d G "AN0_ANALOG" 1 356 "0x0E" "!old only provided for compatibility"
d G "VSS_VDD" 1 359 "0x00" "Range 0-Vdd"
d G "VREF_VREF" 1 360 "0x30" "Range VrefL-VrefH"
d G "VREF_VDD" 1 361 "0x20" "Range VrefL-Vdd"
d G "VSS_VREF" 1 362 "0x10" "Range 0-VrefH"
d G "ADC_START_AND_READ" 1 365 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 1 366 "1"
d G "ADC_READ_ONLY" 1 367 "6"
d G "L_TO_H" 1 375 "0x40"
d G "H_TO_L" 1 376 "0"
d G "GLOBAL" 1 378 "0xF2C0"
d G "PERIPH" 1 379 "0xF240"
d G "INT_RTCC" 1 380 "0x00F220"
d G "INT_TIMER0" 1 381 "0x00F220"
d G "INT_TIMER1" 1 382 "0x009D01"
d G "INT_TIMER2" 1 383 "0x009D02"
d G "INT_TIMER3" 1 384 "0x00A002"
d G "INT_EXT_L2H" 1 385 "0x5000F210"
d G "INT_EXT_H2L" 1 386 "0x6000F210"
d G "INT_EXT" 1 387 "0x00F210"
d G "INT_EXT1_L2H" 1 388 "0x5001F008"
d G "INT_EXT1_H2L" 1 389 "0x6001F008"
d G "INT_EXT1" 1 390 "0x00F008"
d G "INT_EXT2_L2H" 1 391 "0x5002F010"
d G "INT_EXT2_H2L" 1 392 "0x6002F010"
d G "INT_EXT2" 1 393 "0x00F010"
d G "INT_RB" 1 394 "0x00FFF208"
d G "INT_AD" 1 395 "0x009D40"
d G "INT_RDA" 1 396 "0x009D20"
d G "INT_TBE" 1 397 "0x009D10"
d G "INT_SSP" 1 398 "0x009D08"
d G "INT_CCP1" 1 399 "0x009D04"
d G "INT_CCP2" 1 400 "0x00A001"
d G "INT_BUSCOL" 1 401 "0x00A008"
d G "INT_LOWVOLT" 1 402 "0x00A004"
d G "INT_COMP" 1 403 "0x00A040"
d G "INT_EEPROM" 1 404 "0x00A010"
d G "INT_OSCF" 1 405 "0x00A080"
d G "INT_USB" 1 406 "0x00A020"
D G "_STDLIB" 2 12 ""
D G "RAND_MAX" 2 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 2 25 "1"
T G "div_t" 2 33 "{sint8 quot,sint8 rem}"
T G "ldiv_t" 2 38 "{sint16 quot,sint16 rem}" "(C) Copyright 1996,2003 Custom Computer Services           ////"
D G "_STDDEF" 3 13 ""
D G "ptrdiff_t" 3 18 "unsigned int16"
D G "size_t" 3 24 "unsigned int16"
D G "wchar_t" 3 26 "char"
D G "NULL" 3 27 "0"
D G "offsetof" 3 29 "(s,f) (offsetofbit(s,f)/8)"
C L "atoi" 2 43 2 "FUNCTION"
C L "atoi" 2 46 1 "*"
C L "atoi" 2 46 1 "*"
V L "s" 2 50 "*int8"
F G "atoi" 2 50 "sint8(*int8 s)" "Syntax: signed int32  atoi32(char * s)"
V L "s" 2 58 "*int8"
F G "atoi32" 2 58 "sint32(*int8 s)"
C L "atoi32" 2 46 3 "FUNCTION"
V L "num" 2 79 "sint32"
V L "base" 2 79 "int8"
V L "s" 2 79 "*int8"
F G "itoa" 2 79 "*int8(sint32 num,int8 base,*int8 s)" "Standard template: signed int16  atol(char * s)"
C L "itoa" 2 81 1 "*"
C L "itoa" 2 81 1 "*"
V L "s" 2 85 "*int8"
F G "atol" 2 85 "sint16(*int8 s)" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "atol" 2 87 1 "*"
C L "atol" 2 87 1 "*"
C L "atol" 2 87 1 "*"
C L "atol" 2 87 1 "*"
V L "s" 2 93 "*int8"
V L "endptr" 2 93 "*int8"
V L "base" 2 93 "sint8"
F G "strtol" 2 93 "sint16(*int8 s,*int8 endptr,sint8 base)" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 2 95 1 "*"
C L "strtol" 2 95 1 "*"
C L "strtol" 2 95 1 "*"
C L "strtol" 2 95 1 "*"
V L "s" 2 101 "*int8"
V L "endptr" 2 101 "*int8"
V L "base" 2 101 "sint8"
F G "strtoul" 2 101 "int16(*int8 s,*int8 endptr,sint8 base)" "Standart template: float strtof(char * s,char *endptr)"
C L "strtoul" 2 95 2 "FUNCTION"
C L "strtoul" 2 103 1 "*"
C L "strtoul" 2 103 1 "*"
C L "strtoul" 2 103 1 "*"
V L "s" 2 110 "*int8"
V L "endptr" 2 110 "*int8"
F G "strtof" 2 110 "float(*int8 s,*int8 endptr)"
D G "strtof48" 2 116 "(s, e) strtof(s, e)"
D G "strtod" 2 117 "(s, e) strtof(s, e)"
C L "strtof" 2 103 1 "FUNCTION"
C L "strtof" 2 120 1 "*"
D G "atof" 2 124 "(s)   strtof(s, 0)"
C L "strtof" 2 120 1 "FUNCTION"
C L "strtof" 2 143 1 "*"
C L "strtof" 2 143 1 "*"
C L "strtof" 2 143 1 "*"
V L "s" 2 149 "*int8"
F G "atoe" 2 149 "float(*int8 s)"
C L "atoe" 2 143 2 "FUNCTION"
C L "atoe" 2 160 1 "*"
C L "atoe" 2 160 1 "*"
C L "atoe" 2 160 1 "*"
C L "atoe" 2 160 1 "*"
C L "atoe" 2 160 1 "*"
F G "rand" 2 169 "int16()" "The srand function uses the argument as a seed for a new sequence of"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
C L "rand" 2 171 1 "*"
V L "seed" 2 191 "int32"
F G "srand" 2 191 "void(int32 seed)" "Memory management functions"
C L "srand" 2 171 3 "FUNCTION"
V L "string" 2 205 "*int8"
F G "system" 2 205 "sint8(*int8 string)" "Searching and sorting utilities"
C L "system" 2 171 1 "FUNCTION"
C L "system" 2 211 1 "*"
C L "system" 2 211 1 "*"
C L "system" 2 211 1 "*"
C L "system" 2 211 1 "*"
C L "system" 2 211 1 "*"
C L "system" 2 211 1 "*"
C L "system" 2 211 1 "*"
C L "system" 2 211 1 "*"
C L "system" 2 211 1 "*"
C L "system" 2 211 1 "*"
C L "system" 2 211 4 "*"
C L "system" 2 229 1 "*"
C L "system" 2 229 1 "*"
C L "system" 2 229 1 "*"
C L "system" 2 229 1 "*"
C L "system" 2 229 1 "*"
C L "system" 2 229 1 "*"
C L "system" 2 229 1 "*"
C L "system" 2 229 1 "*"
D G "labs" 2 249 "abs"
V L "numer" 2 251 "sint8"
V L "denom" 2 251 "sint8"
F G "div" 2 251 "div_t(sint8 numer,sint8 denom)"
V L "numer" 2 252 "sint16"
V L "denom" 2 252 "sint16"
F G "ldiv" 2 252 "ldiv_t(sint16 numer,sint16 denom)" "Multibyte character functions"
C L "ldiv" 2 229 4 "FUNCTION"
C L "ldiv" 3 2 7 "FUNCTION"
D G "_STRING" 4 12 ""
C L "ldiv" 3 2 7 "FUNCTION"
D G "_CTYPE" 5 12 ""
D G "islower" 5 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 5 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 5 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 5 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 5 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 5 19 "(x)  ((x)==' ')"
D G "isxdigit" 5 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 5 21 "(x)  ((x)<' ')"
D G "isprint" 5 22 "(x)  ((x)>=' ')"
D G "isgraph" 5 23 "(x)  ((x)>' ')"
D G "ispunct" 5 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "ldiv" 4 19 10 "FUNCTION"
V L "s1" 4 34 "*int8"
V L "s2" 4 34 "*int8"
V L "n" 4 34 "int16"
F G "memmove" 4 34 "*int8(*int8 s1,*int8 s2,int16 n)"
V L "sc1" 4 36 "*int8"
V L "sc2" 4 37 "*int8"
D G "strcopy" 4 54 "strcpy"
C L "strncpy" 4 19 4 "FUNCTION"
V L "s1" 4 61 "*int8"
V L "s2" 4 61 "*int8"
V L "n" 4 61 "int16"
F G "strncpy" 4 61 "*int8(*int8 s1,*int8 s2,int16 n)"
V L "s" 4 63 "*int8"
C L "strcat" 4 19 3 "FUNCTION"
V L "s1" 4 78 "*int8"
V L "s2" 4 78 "*int8"
F G "strcat" 4 78 "*int8(*int8 s1,*int8 s2)"
V L "s" 4 80 "*int8"
C L "strncat" 4 19 2 "FUNCTION"
V L "s1" 4 96 "*int8"
V L "s2" 4 96 "*int8"
V L "n" 4 96 "int16"
F G "strncat" 4 96 "*int8(*int8 s1,*int8 s2,int16 n)"
V L "s" 4 98 "*int8"
C L "memcmp" 4 19 3 "FUNCTION"
V L "s1" 4 120 "*int8"
V L "s2" 4 120 "*int8"
V L "n" 4 120 "int16"
F G "memcmp" 4 120 "sint8(*int8 s1,*int8 s2,int16 n)"
V L "su1" 4 122 "*int8"
V L "su2" 4 122 "*int8"
C L "strcmp" 4 19 2 "FUNCTION"
V L "s1" 4 134 "*int8"
V L "s2" 4 134 "*int8"
F G "strcmp" 4 134 "sint8(*int8 s1,*int8 s2)"
C L "strcoll" 4 19 2 "FUNCTION"
V L "s1" 4 144 "*int8"
V L "s2" 4 144 "*int8"
F G "strcoll" 4 144 "sint8(*int8 s1,*int8 s2)"
C L "strncmp" 4 19 4 "FUNCTION"
V L "s1" 4 157 "*int8"
V L "s2" 4 157 "*int8"
V L "n" 4 157 "int16"
F G "strncmp" 4 157 "sint8(*int8 s1,*int8 s2,int16 n)"
C L "strxfrm" 4 19 3 "FUNCTION"
V L "s1" 4 169 "*int8"
V L "s2" 4 169 "*int8"
V L "n" 4 169 "int16"
F G "strxfrm" 4 169 "int16(*int8 s1,*int8 s2,int16 n)"
V L "s" 4 171 "*int8"
V L "n1" 4 172 "int8"
C L "memchr" 4 19 3 "FUNCTION"
V L "s" 4 191 "*int8"
V L "c" 4 191 "int8"
V L "n" 4 191 "int16"
F G "memchr" 4 191 "*int8(*int8 s,int8 c,int16 n)"
V L "uc" 4 193 "int8"
V L "su" 4 194 "*int8"
C L "strchr" 4 19 2 "FUNCTION"
V L "s" 4 205 "*int8"
V L "c" 4 205 "int8"
F G "strchr" 4 205 "*int8(*int8 s,int8 c)"
C L "strcspn" 4 19 4 "FUNCTION"
V L "s1" 4 217 "*int8"
V L "s2" 4 217 "*int8"
F G "strcspn" 4 217 "int8(*int8 s1,*int8 s2)"
V L "sc1" 4 219 "*int8"
V L "sc2" 4 219 "*int8"
C L "strpbrk" 4 19 4 "FUNCTION"
V L "s1" 4 232 "*int8"
V L "s2" 4 232 "*int8"
F G "strpbrk" 4 232 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 4 234 "*int8"
V L "sc2" 4 234 "*int8"
C L "strrchr" 4 19 2 "FUNCTION"
V L "s" 4 247 "*int8"
V L "c" 4 247 "int8"
F G "strrchr" 4 247 "*int8(*int8 s,int8 c)"
V L "p" 4 249 "*int8"
C L "strspn" 4 19 2 "FUNCTION"
V L "s1" 4 262 "*int8"
V L "s2" 4 262 "*int8"
F G "strspn" 4 262 "int8(*int8 s1,*int8 s2)"
V L "sc1" 4 264 "*int8"
V L "sc2" 4 264 "*int8"
C L "strstr" 4 19 6 "FUNCTION"
V L "s1" 4 281 "*int8"
V L "s2" 4 281 "*int8"
F G "strstr" 4 281 "*int8(*int8 s1,*int8 s2)"
V L "s" 4 283 "*int8"
V L "t" 4 283 "*int8"
C L "strtok" 4 19 13 "FUNCTION"
V L "s1" 4 320 "*int8"
V L "s2" 4 320 "*int8"
F G "strtok" 4 320 "*int8(*int8 s1,*int8 s2)"
V L "beg" 4 322 "*int8"
V L "end" 4 322 "*int8"
V L "save" 4 323 "*int8"
C L "strlen" 4 19 6 "FUNCTION"
V L "s" 4 369 "*int8"
F G "strlen" 4 369 "int8(*int8 s)"
V L "sc" 4 371 "*int8"
C L "stricmp" 4 19 2 "FUNCTION"
V L "s1" 4 380 "*int8"
V L "s2" 4 380 "*int8"
F G "stricmp" 4 380 "sint8(*int8 s1,*int8 s2)"
C L "strlwr" 4 19 3 "FUNCTION"
V L "s" 4 394 "*int8"
F G "strlwr" 4 394 "*int8(*int8 s)"
V L "p" 4 396 "*int8"
V L "numer" 2 274 "sint8"
V L "denom" 2 274 "sint8"
F G "div" 2 274 "div_t(sint8 numer,sint8 denom)"
V L "val" 2 276 "div_t"
V L "numer" 2 282 "sint16"
V L "denom" 2 282 "sint16"
F G "ldiv" 2 282 "ldiv_t(sint16 numer,sint16 denom)"
V L "val" 2 284 "ldiv_t"
V L "s" 2 361 "*int8"
F G "atoe" 2 361 "float(*int8 s)"
V L "pow10" 2 363 "float"
V L "result" 2 364 "float"
V L "sign" 2 365 "int8"
V L "expsign" 2 366 "int8"
V L "c" 2 367 "int8"
V L "ptr" 2 368 "int8"
V L "i" 2 369 "int8"
V L "exp" 2 370 "float"
V L "expcnt" 2 371 "int8"
C L "atoe" 2 397 1 "FUNCTION"
V L "s" 2 429 "*int8"
F G "atoi" 2 429 "sint8(*int8 s)"
V L "result" 2 431 "sint8"
V L "sign" 2 432 "int8"
V L "base" 2 432 "int8"
V L "index" 2 432 "int8"
V L "c" 2 433 "int8"
C L "atoi" 2 397 1 "FUNCTION"
C L "atoi" 2 397 1 "FUNCTION"
C L "atoi" 2 397 1 "FUNCTION"
C L "atoi" 2 397 1 "FUNCTION"
C L "atoi" 2 397 1 "FUNCTION"
C L "atoi" 2 397 1 "FUNCTION"
V L "s" 2 498 "*int8"
F G "atol" 2 498 "sint16(*int8 s)"
V L "result" 2 500 "sint16"
V L "sign" 2 501 "int8"
V L "base" 2 501 "int8"
V L "index" 2 501 "int8"
V L "c" 2 502 "int8"
C L "atol" 2 397 1 "FUNCTION"
C L "atol" 2 397 1 "FUNCTION"
C L "atol" 2 397 1 "FUNCTION"
C L "atol" 2 397 1 "FUNCTION"
C L "mult_with10" 2 397 1 "FUNCTION"
V L "num" 2 565 "int32"
F G "mult_with10" 2 565 "sint32(int32 num)"
V L "s" 2 571 "*int8"
F G "atoi32" 2 571 "sint32(*int8 s)"
V L "result" 2 573 "sint32"
V L "sign" 2 574 "int8"
V L "base" 2 574 "int8"
V L "index" 2 574 "int8"
V L "c" 2 575 "int8"
C L "atoi32" 2 397 1 "FUNCTION"
C L "atoi32" 2 397 1 "FUNCTION"
C L "atoi32" 2 397 1 "FUNCTION"
C L "atoi32" 2 397 1 "FUNCTION"
C L "atoi32" 2 397 1 "FUNCTION"
V L "num" 2 770 "sint32"
V L "base" 2 770 "int8"
V L "s" 2 770 "*int8"
F G "itoa" 2 770 "*int8(sint32 num,int8 base,*int8 s)"
V L "temp" 2 772 "int32"
V L "i" 2 773 "int8"
V L "sign" 2 773 "int8"
V L "cnt" 2 773 "int8"
V L "c" 2 774 "int8"
C L "itoa" 2 397 1 "FUNCTION"
C L "itoa" 2 397 1 "FUNCTION"
C L "itoa" 2 397 1 "FUNCTION"
C L "itoa" 2 397 1 "FUNCTION"
C L "itoa" 2 397 1 "FUNCTION"
V L "s" 2 807 "*int8"
V L "endptr" 2 807 "*int8"
F G "strtof" 2 807 "float(*int8 s,*int8 endptr)"
V L "pow10" 2 809 "float"
V L "result" 2 810 "float"
V L "skip" 2 811 "int1"
V L "sign" 2 811 "int1"
V L "point" 2 811 "int1"
V L "c" 2 812 "int8"
V L "ptr" 2 813 "int8"
V L "s" 2 1025 "*int8"
V L "endptr" 2 1025 "*int8"
V L "base" 2 1025 "sint8"
F G "strtoul" 2 1025 "int16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 2 1027 "*int8"
V L "s1" 2 1027 "*int8"
V L "sd" 2 1027 "*int8"
V L "x" 2 1028 "int16"
V L "sign" 2 1029 "int8"
V L "digits" 2 1030 "int8[1]"
C L "strtoul" 2 397 1 "FUNCTION"
C L "strtoul" 2 397 1 "FUNCTION"
C L "strtoul" 2 397 1 "FUNCTION"
V L "s" 2 1087 "*int8"
V L "endptr" 2 1087 "*int8"
V L "base" 2 1087 "sint8"
F G "strtol" 2 1087 "sint16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 2 1089 "*int8"
V L "s1" 2 1089 "*int8"
V L "sd" 2 1089 "*int8"
V L "x" 2 1090 "sint16"
V L "sign" 2 1091 "int8"
V L "digits" 2 1092 "int8[1]"
C L "strtol" 2 397 1 "FUNCTION"
C L "strtol" 2 397 1 "FUNCTION"
C L "strtol" 2 397 1 "FUNCTION"
V L "string" 2 1150 "*int8"
F G "system" 2 1150 "sint8(*int8 string)"
V L "s" 2 1155 "*int8"
V L "n" 2 1155 "int16"
F G "mblen" 2 1155 "int8(*int8 s,int16 n)"
V L "pwc" 2 1160 "*int8"
V L "s" 2 1160 "*int8"
V L "n" 2 1160 "int16"
F G "mbtowc" 2 1160 "int8(*int8 pwc,*int8 s,int16 n)"
V L "s" 2 1166 "*int8"
V L "wchar" 2 1166 "int8"
F G "wctomb" 2 1166 "int8(*int8 s,int8 wchar)"
V L "pwcs" 2 1172 "*int8"
V L "s" 2 1172 "*int8"
V L "n" 2 1172 "int16"
F G "mbstowcs" 2 1172 "int16(*int8 pwcs,*int8 s,int16 n)"
V L "s" 2 1178 "*int8"
V L "pwcs" 2 1178 "*int8"
V L "n" 2 1178 "int16"
F G "wcstombs" 2 1178 "int16(*int8 s,*int8 pwcs,int16 n)"
V G "_Randseed" 2 1188 "int32"
F G "rand" 2 1190 "int16()"
V L "seed" 2 1196 "int32"
F G "srand" 2 1196 "void(int32 seed)"
V L "p1" 2 1206 "*int8"
V L "p2" 2 1206 "*int8"
T G "*_Cmpfun" 2 1206 "sint8(*int8 p1,*int8 p2)"
V L "qdata" 2 1213 "*int8"
V L "qitems" 2 1213 "int8"
V L "qsize" 2 1213 "int8"
V L "cmp" 2 1213 "_Cmpfun"
F G "qsort" 2 1213 "void(*int8 qdata,int8 qitems,int8 qsize,_Cmpfun cmp)"
V L "m" 2 1214 "int8"
V L "j" 2 1214 "int8"
V L "i" 2 1214 "int8"
V L "l" 2 1214 "int8"
V L "done" 2 1215 "int1"
V L "t" 2 1216 "int8[16]"
V L "key" 2 1241 "*int8"
V L "base" 2 1241 "*int8"
V L "num" 2 1241 "int16"
V L "width" 2 1241 "int16"
V L "cmp" 2 1241 "_Cmpfun"
F G "bsearch" 2 1241 "*int8(*int8 key,*int8 base,int16 num,int16 width,_Cmpfun cmp)"
V L "p" 2 1243 "*int8"
V L "q" 2 1243 "*int8"
V L "n" 2 1244 "int16"
V L "pivot" 2 1245 "int16"
V L "val" 2 1246 "sint8"
C L "bsearch" 2 397 1 "FUNCTION"
D G "_STDINT" 6 19 ""
T G "int8_t" 6 23 "sint8"
T G "uint8_t" 6 24 "int8"
T G "int16_t" 6 25 "sint16"
T G "uint16_t" 6 26 "int16"
T G "int32_t" 6 27 "sint32"
T G "uint32_t" 6 28 "int32"
D G "INT8_MAX" 6 37 " (128)"
D G "INT8_MIN" 6 38 " (-127)"
D G "UINT8_MAX" 6 39 " (255)"
D G "INT16_MAX" 6 41 " (32767)"
D G "INT16_MIN" 6 42 " (-32768)"
D G "UINT16_MAX" 6 43 " (65535)"
D G "INT32_MAX" 6 45 " (2147483647)"
D G "INT32_MIN" 6 46 " (-2147483648)"
D G "UINT32_MAX" 6 47 " (4294967295)"
T G "int_least8_t" 6 61 "sint8"
T G "uint_least8_t" 6 62 "int8"
T G "int_least16_t" 6 63 "sint16"
T G "uint_least16_t" 6 64 "int16"
T G "int_least32_t" 6 65 "sint32"
T G "uint_least32_t" 6 66 "int32"
D G "INT_LEAST8_MAX" 6 75 " (128)"
D G "INT_LEAST8_MIN" 6 76 " (-127)"
D G "UINT_LEAST8_MAX" 6 77 " (255)"
D G "INT_LEAST16_MAX" 6 79 " (32767)"
D G "INT_LEAST16_MIN" 6 80 " (-32768)"
D G "UINT_LEAST16_MAX" 6 81 " (65535)"
D G "INT_LEAST32_MAX" 6 83 " (2147483647)"
D G "INT_LEAST32_MIN" 6 84 " (-2147483648)"
D G "UINT_LEAST32_MAX" 6 85 " (4294967295)"
T G "int_fast8_t" 6 112 "sint8"
T G "uint_fast8_t" 6 113 "int8"
D G "INT_FAST8_MAX" 6 114 " (128)"
D G "INT_FAST8_MIN" 6 115 " (-127)"
D G "UINT_FAST8_MAX" 6 116 " (255)"
T G "int_fast16_t" 6 117 "sint16"
T G "uint_fast16_t" 6 118 "int16"
T G "int_fast32_t" 6 121 "sint32"
T G "uint_fast32_t" 6 122 "int32"
D G "INT_FAST16_MAX" 6 124 " (32767)"
D G "INT_FAST16_MIN" 6 125 " (-32768)"
D G "UINT_FAST16_MAX" 6 126 " (65535)"
D G "INT_FAST32_MAX" 6 128 " (2147483647)"
D G "INT_FAST32_MIN" 6 129 " (-2147483648)"
D G "UINT_FAST32_MAX" 6 130 " (4294967295)"
D G "_STDIO" 7 12 ""
D G "STATELENGTH" 0 8 "36"
D G "KEYLENGTH" 0 9 "10"
D G "IVLENGTH" 0 10 "10"
T G "u8" 0 12 "uint8_t"
T G "u64" 0 13 "int16"
V L "key" 0 15 "*u8"
V L "iv" 0 15 "*u8"
V L "input" 0 15 "*u8"
V L "length" 0 15 "u64"
F G "ip_encrypt" 0 15 "void(*u8 key,*u8 iv,*u8 input,u64 length)"
V L "key" 0 16 "*u8"
V L "iv" 0 16 "*u8"
V L "input" 0 16 "*u8"
V L "length" 0 16 "u64"
F G "ip_decrypt" 0 16 "void(*u8 key,*u8 iv,*u8 input,u64 length)"
V L "key" 0 18 "*u8"
V L "iv" 0 18 "*u8"
V L "input" 0 18 "*u8"
V L "length" 0 18 "u64"
F G "encrypt" 0 18 "*u8(*u8 key,*u8 iv,*u8 input,u64 length)"
V L "key" 0 19 "*u8"
V L "iv" 0 19 "*u8"
V L "input" 0 19 "*u8"
V L "length" 0 19 "u64"
F G "decrypt" 0 19 "*u8(*u8 key,*u8 iv,*u8 input,u64 length)" "*********************************************** DEVICE DEPENDENT CONFIGURATION *******************************************************"
C L "decrypt" 0 24 14 "FUNCTION"
C L "decrypt" 0 46 1 "*"
C L "decrypt" 0 52 1 "*"
C L "decrypt" 0 52 1 "*"
V L "split" 0 58 "*u8"
V L "offset" 0 58 "u64"
F G "scw" 0 58 "void(*u8 split,u64 offset)"
V L "post" 0 60 "*u8"
V L "pre" 0 61 "*u8"
C L "scw" 0 52 1 "FUNCTION"
V L "mask" 0 64 "u8"
C L "scw" 0 52 1 "FUNCTION"
V L "shifted" 0 67 "u8"
C L "acw" 0 76 1 "*"
C L "acw" 0 76 1 "*"
V L "split" 0 82 "*u8"
V L "offset" 0 82 "u64"
F G "acw" 0 82 "void(*u8 split,u64 offset)"
V L "post" 0 84 "*u8"
V L "pre" 0 85 "*u8"
C L "acw" 0 76 1 "FUNCTION"
V L "mask" 0 88 "u8"
C L "acw" 0 76 1 "FUNCTION"
V L "shifted" 0 91 "u8"
C L "insert_byte" 0 101 1 "*"
C L "insert_byte" 0 107 1 "*"
C L "insert_byte" 0 107 1 "*"
V L "p_mark" 0 113 "*"
V L "b8" 0 113 "*u8"
V L "repeat" 0 113 "u64"
F G "insert_byte" 0 113 "void(* p_mark,*u8 b8,u64 repeat)"
V L "mark" 0 115 "*u8"
V L "iter" 0 116 "u64"
C L "insert_key" 0 129 1 "*"
C L "insert_key" 0 129 1 "*"
V L "p_mark" 0 135 "*"
V L "key" 0 135 "*u8"
F G "insert_key" 0 135 "void(* p_mark,*u8 key)"
V L "mark" 0 137 "*u8"
C L "insert_iv" 0 148 1 "*"
C L "insert_iv" 0 148 1 "*"
C L "insert_iv" 0 148 1 "*"
C L "insert_iv" 0 148 1 "*"
V L "p_mark" 0 156 "*"
V L "iv" 0 156 "*u8"
F G "insert_iv" 0 156 "void(* p_mark,*u8 iv)" "u8* temp;"
V L "iter" 0 159 "u64"
V L "mark" 0 160 "*u8"
C L "insert_iv" 0 148 2 "FUNCTION"
V G "stateee" 0 179 "u8[36]" "* setup"
C L "setup" 0 181 1 "*"
V L "key" 0 187 "*u8"
V L "iv" 0 187 "*u8"
F G "setup" 0 187 "*u8(*u8 key,*u8 iv)" "u8* stateee;"
V L "mark" 0 190 "*u8"
V L "zero" 0 192 "u8"
V L "end" 0 193 "u8"
C L "setup" 0 181 2 "FUNCTION"
C L "gb" 0 211 1 "*"
C L "gb" 0 217 1 "*"
C L "gb" 0 217 1 "*"
V L "from" 0 223 "*u8"
V L "index" 0 223 "u64"
F G "gb" 0 223 "u8(*u8 from,u64 index)"
V L "b8" 0 225 "u8"
V L "shifted" 0 227 "u8"
C L "pb" 0 233 1 "*"
C L "pb" 0 233 1 "*"
V L "to" 0 239 "*u8"
V L "from" 0 239 "*u8"
V L "index" 0 239 "u64"
F G "pb" 0 239 "void(*u8 to,*u8 from,u64 index)"
V L "mask" 0 241 "u8"
V L "put" 0 243 "u8"
C L "gsb" 0 252 1 "*"
C L "gsb" 0 252 1 "*"
V L "state" 0 258 "*u8"
V L "index" 0 258 "u64"
F G "gsb" 0 258 "u8(*u8 state,u64 index)"
V L "b8" 0 260 "u64"
V L "bit" 0 261 "u64"
C L "psb" 0 267 1 "*"
C L "psb" 0 267 1 "*"
V L "state" 0 273 "*u8"
V L "from" 0 273 "*u8"
V L "index" 0 273 "u64"
F G "psb" 0 273 "void(*u8 state,*u8 from,u64 index)"
V L "b8" 0 275 "u64"
V L "bit" 0 276 "u64"
C L "update" 0 284 1 "*"
V L "state" 0 290 "*u8"
F G "update" 0 290 "u8(*u8 state)"
V L "t1" 0 291 "u8"
V L "t2" 0 291 "u8"
V L "t3" 0 291 "u8"
V L "z" 0 291 "u8"
V L "_" 0 292 "u8"
V L "iter" 0 293 "u64" "indexes are from zero"
C L "update" 0 284 2 "FUNCTION"
C L "update" 0 284 1 "FUNCTION"
C L "update" 0 284 1 "FUNCTION"
C L "stream" 0 323 1 "*"
C L "stream" 0 323 1 "*"
V L "state" 0 329 "*u8"
F G "stream" 0 329 "u8(*u8 state)"
V L "keystream" 0 331 "u8"
V L "z" 0 331 "u8"
V L "bit" 0 332 "u64"
C L "reverse" 0 346 1 "*"
C L "reverse" 0 352 1 "*"
C L "reverse" 0 352 1 "*"
V L "str" 0 358 "*u8"
V L "length" 0 358 "u64"
F G "reverse" 0 358 "void(*u8 str,u64 length)"
V L "l" 0 360 "u64"
V L "r" 0 360 "u64"
V L "t1" 0 361 "u8"
V L "t2" 0 361 "u8"
C L "ip_cipher" 0 375 1 "*"
C L "ip_cipher" 0 375 1 "*"
V L "key" 0 381 "*u8"
V L "iv" 0 381 "*u8"
V L "input" 0 381 "*u8"
V L "length" 0 381 "u64"
F G "ip_cipher" 0 381 "void(*u8 key,*u8 iv,*u8 input,u64 length)"
V L "mark" 0 383 "u64"
V L "iter" 0 384 "u64"
V L "input_backup" 0 385 "u8[16]"
C L "ip_cipher" 0 375 2 "FUNCTION"
V L "state" 0 390 "*u8"
V L "keystream" 0 393 "u8" "printf("\n___________keystream__________\n");"
C L "ip_cipher" 0 375 1 "FUNCTION"
V G "outputtt" 0 407 "u8[16]" "* cipher"
C L "cipher" 0 409 1 "*"
V L "key" 0 415 "*u8"
V L "iv" 0 415 "*u8"
V L "input" 0 415 "*u8"
V L "length" 0 415 "u64"
F G "cipher" 0 415 "*u8(*u8 key,*u8 iv,*u8 input,u64 length)" "u8* outputtt;"
C L "ip_encrypt" 0 427 1 "*"
C L "ip_encrypt" 0 433 1 "*"
C L "ip_encrypt" 0 433 1 "*"
V L "key" 0 439 "*u8"
V L "iv" 0 439 "*u8"
V L "input" 0 439 "*u8"
V L "length" 0 439 "u64"
F G "ip_encrypt" 0 439 "void(*u8 key,*u8 iv,*u8 input,u64 length)"
C L "ip_decrypt" 0 446 1 "*"
C L "ip_decrypt" 0 446 1 "*"
V L "key" 0 452 "*u8"
V L "iv" 0 452 "*u8"
V L "input" 0 452 "*u8"
V L "length" 0 452 "u64"
F G "ip_decrypt" 0 452 "void(*u8 key,*u8 iv,*u8 input,u64 length)"
C L "encrypt" 0 459 1 "*"
C L "encrypt" 0 459 1 "*"
V L "key" 0 465 "*u8"
V L "iv" 0 465 "*u8"
V L "input" 0 465 "*u8"
V L "length" 0 465 "u64"
F G "encrypt" 0 465 "*u8(*u8 key,*u8 iv,*u8 input,u64 length)"
C L "decrypt" 0 470 1 "*"
C L "decrypt" 0 470 1 "*"
V L "key" 0 476 "*u8"
V L "iv" 0 476 "*u8"
V L "input" 0 476 "*u8"
V L "length" 0 476 "u64"
F G "decrypt" 0 476 "*u8(*u8 key,*u8 iv,*u8 input,u64 length)"
V L "digit" 0 480 "int8"
F G "convertdigit" 0 480 "int8(int8 digit,*u8 iv,*u8 input,u64 length)"
V L "value" 0 482 "int8"
C L "MAIN" 0 470 1 "FUNCTION"
F G "MAIN" 0 539 "void()" "arrays and variables"
V L "in" 0 543 "int8[16]" "space the plain text"
V L "out" 0 544 "u8[16]" "space for the cipher text"
V L "key" 0 545 "u8[10]"
V L "iv" 0 546 "u8[10]"
V L "buffer" 0 548 "int8[33]" "space to read the ASCII characters coming through the serial in"
V L "hex" 0 549 "int8[2]" "space for keeping hexadecimal ASCII representation of an 8 bit number"
V L "i" 0 550 "int8"
V L "temp" 0 551 "int8"
C L "MAIN" 0 470 1 "FUNCTION"
C L "MAIN" 0 470 1 "FUNCTION"
C L "MAIN" 0 470 1 "FUNCTION"
C L "MAIN" 0 470 1 "FUNCTION"
C L "MAIN" 0 470 2 "FUNCTION"
C L "MAIN" 0 470 1 "FUNCTION"
C L "MAIN" 0 470 2 "FUNCTION"
C L "MAIN" 0 470 1 "FUNCTION"
C L "MAIN" 0 470 1 "FUNCTION"
C L "MAIN" 0 470 1 "FUNCTION"
C L "MAIN" 0 470 1 "FUNCTION"
C L "MAIN" 0 470 1 "FUNCTION"
C L "MAIN" 0 470 3 "FUNCTION"
C L "MAIN" 0 470 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 1
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "read_external_memory" 3 0
F B "write_external_memory" 3 0
F B "setup_external_memory" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_e" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "input_change_c" 0 0
F B "input_change_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 2
F B "setup_adc_ports" 1 2
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 1 2
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "brownout_enable" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
